{
    "name": "nodes.affinityPropagation",
    "pureAliases": ["nodes.ap"],
    "descr": "Considering only the elements in the calling collection, calculate the [affinity propagation clustering](https://en.wikipedia.org/wiki/Affinity_propagation) of the nodes.",
    "formats": [
      {
        "args": [
          { "name": "options", "fields": [
            { "name": "attributes: [ function( node ) ... ]", "descr": "An array of attribute functions, each of which returns a numeric attribute value for the specified node.  Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster.  Each attribute may have to be normalised in order for the chosen distance metric to make sense.  Attributes must be specified unless a custom `distance: function( nodeP, nodeQ )` is specified." },
            { "name": "distance", "descr": "The distance classifier used to compare attribute vectors.  It is optional if attributes are specified.  It may take on one of several values:", "fields": [
              { "name": "'euclidean'", "descr": "[Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance) (default)" },
              { "name": "'squaredEuclidean'", "descr": "[Squared Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance)" },
              { "name": "'manhattan'", "descr": "[Manhattan distance](https://en.wikipedia.org/wiki/Taxicab_geometry)" },
              { "name": "'max'", "descr": "[Max distance](https://en.wikipedia.org/wiki/Uniform_norm)" },
              { "name": "function( length, getPAt, getQAt[, nodeP, nodeQ] )", "descr": "A custom function that returns the distance between attribute vectors `p` and `q`.", "fields": [
                { "name": "length", "descr": "The length of the vectors." },
                { "name": "getPAt(i)", "descr": "A function that returns the ith value of the `p` vector." },
                { "name": "getQAt(i)", "descr": "A function that returns the ith value of the `q` vector." },
                { "name": "nodeP", "optional": true, "descr": "An optionally-used reference to the node associated with the `p` attribute vector.  It is useful for affecting the weights with information outside of the attributes, such as connectivity." },
                { "name": "nodeQ", "optional": true, "descr": "An optionally-used reference to the node associated with the `q` attribute vector.  It is useful for affecting the weights with information outside of the attributes, such as connectivity." }
              ] },
              { "name": "function( nodeP, nodeQ )", "descr": "A custom function that returns the distance between `nodeP` and `nodeQ`.  This allows for specifying the distance matrix directly, forgoing attributes." }
            ] },
            { "name": "preference", "optional": true, "descr": "The metric used to determine the suitability of a data point (i.e. node attribute vector) to serve as an exemplar.  It may take on one of several special values, which are determined from the similarity matrix (i.e. the negative distance matrix).  Or a manual, numeric value may be used (generally of the opposite sign of your distance values).  The special values include:", "fields": [
              { "name": "'median'", "descr": "Use the median value of the similarity matrix (default)." },
              { "name": "'mean'", "descr": "Use the mean value of the similarity matrix." },
              { "name": "'min'", "descr": "Use the minimum value of the similarity matrix." },
              { "name": "'max'", "descr": "Use the maximum value of the similarity matrix." }
            ] },
            { "name": "damping", "descr": "A damping factor on [0.5, 1) (default `0.8`).", "optional": true },
            { "name": "minIterations", "descr": "The minimum number of iteraions the algorithm will run before stopping (default `100`).", "optional": true },
            { "name": "maxIterations", "descr": "The maximum number of iteraions the algorithm will run before stopping (default `1000`).", "optional": true }
          ] }
        ]
      }
    ],
    "md": "collection/affinityPropagation"
  }